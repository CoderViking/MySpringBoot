# THYMELEAF (ThymeleafAutoConfiguration)
# Whether to enable template caching.
spring.thymeleaf.cache=true
# Whether to check that the template exists before rendering it.
spring.thymeleaf.check-template=true
# Whether to check that the templates location exists.
spring.thymeleaf.check-template-location=true
# Whether to enable Thymeleaf view resolution for Web frameworks.
spring.thymeleaf.enabled=true
# Enable the SpringEL compiler in SpringEL expressions.
spring.thymeleaf.enable-spring-el-compiler=false
# Template files encoding.
spring.thymeleaf.encoding=UTF-8
# Comma-separated list of view names (patterns allowed) that should be excluded from resolution.
spring.thymeleaf.excluded-view-names=
# Template mode to be applied to templates. See also Thymeleaf's TemplateMode enum.
spring.thymeleaf.mode=HTML
# Prefix that gets prepended to view names when building a URL.
spring.thymeleaf.prefix=classpath:/templates/
# Comma-separated list of view names (patterns allowed) that should be the only ones executed in CHUNKED mode when a max chunk size is set.
spring.thymeleaf.reactive.chunked-mode-view-names=
# Comma-separated list of view names (patterns allowed) that should be executed in FULL mode even if a max chunk size is set.
spring.thymeleaf.reactive.full-mode-view-names=
# Maximum size of data buffers used for writing to the response, in bytes.
spring.thymeleaf.reactive.max-chunk-size=0
# Media types supported by the view technology.
spring.thymeleaf.reactive.media-types=
# Content-Type value written to HTTP responses.
spring.thymeleaf.servlet.content-type=text/html
# Suffix that gets appended to view names when building a URL.
spring.thymeleaf.suffix=.html
# Order of the template resolver in the chain.
spring.thymeleaf.template-resolver-order=
# Comma-separated list of view names (patterns allowed) that can be resolved.
spring.thymeleaf.view-names=